incld "pla_lib/w64/kernel32.pla"a;

nmspc std {
	vrbl con_handle_name := "CON"w;

	vrbl con_in : tupl {
		handle : void!
		};

	fnct init_con_in : $() -> void {
		con_in.handle = w64::create_file_w(con_handle_name.data, 0x8000_0000'u32, 0'u32, nullof[void!], 3'u32, 0'u32, nullof[void!]);

		if con_in.handle == %[void!]-1's64 {
			w64::exit_process(%[u32]-1's32);
		}

		return;
	}

	fnct read_con_ch : $() -> u16 {
		vrbl ch : u16;

		vrbl read : u32;

		if w64::read_console_w(con_in.handle, %[void!]ch~, 1'u32, read~, nullof[void!]) == 0's32 {
			return 0xFFFF'u16; 
		}

		if read < 1'u32 {
			return 0xFFFF'u16; 
		}

		return ch;
	}
}