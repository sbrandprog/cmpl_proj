nmspc winapi {
	imprt get_std_handle : $(std_handle : u32) -> void! : "kernel32.dll"a, "GetStdHandle"a;
}

nmspc winapi {
	imprt write_file : $(handle : void!, data : void!, data_size : u32, written : u32!, overlapped : void!) -> s32 : "kernel32.dll"a, "WriteFile"a;
}

vrbl con_data : tupl { handle : void!, written : u32 };

fnct main : $() -> s32 {
	con_data.handle = winapi::get_std_handle(0xFFFFFFF5'u32);

	vrbl str := "Hello world!\n"a;

	winapi::write_file(con_data.handle, %[void!]str.data, %[u32]str.size - 1'u32, con_data.written~, nullof[void!]);

	return %[s32]con_data.written;
}