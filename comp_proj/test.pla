imprt get_std_handle : $(std_handle : u32) -> *void : "kernel32.dll"a, "GetStdHandle"a;
imprt write_file : $(handle : *void, data : *void, data_size : u32, written : *u32, overlapped : *void) -> s32 : "kernel32.dll"a, "WriteFile"a;

fnct main : $() -> s32 {
	vrbl handle : *void;
	handle = get_std_handle(0xFFFFFFF5'u32);

	vrbl str : []u8;

	if 10's32 == 10's32 {
		str = "everything is normal\n"a;
	}
	else {
		str = "rules were broken!\n"a;
	}

	vrbl written : u32;
	write_file(handle, %[*void]str.data, %[u32]str.size - 1'u32, &written, nullof[*void]);

	return %[s32]written;
}